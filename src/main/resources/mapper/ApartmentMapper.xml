<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aijiahao.dao.ApartmentMapper">
  <resultMap id="BaseResultMap" type="com.aijiahao.bean.Apartment">
    <id column="apt_id" jdbcType="CHAR" property="aptId" />
    <result column="apt_describe" jdbcType="VARCHAR" property="aptDescribe" />
    <result column="apt_layer" jdbcType="INTEGER" property="aptLayer" />
    <result column="apt_class" jdbcType="INTEGER" property="aptClass" />
    <result column="apt_maxp" jdbcType="INTEGER" property="aptMaxp" />
    <result column="apt_realp" jdbcType="INTEGER" property="aptRealp" />
    <result column="apt_sex" jdbcType="CHAR" property="aptSex" />
    <result column="apt_address" jdbcType="VARCHAR" property="aptAddress" />
    <result column="apt_img" jdbcType="VARCHAR" property="aptImg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    apt_id, apt_describe, apt_layer, apt_class, apt_maxp, apt_realp, apt_sex, apt_address,
    apt_img
  </sql>
  <select id="selectByExample" parameterType="com.aijiahao.bean.ApartmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apartment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from apartment
    where apt_id = #{aptId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from apartment
    where apt_id = #{aptId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.aijiahao.bean.ApartmentExample">
    delete from apartment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aijiahao.bean.Apartment">
    <selectKey keyProperty="aptId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into apartment (apt_id, apt_describe, apt_layer, apt_class,
      apt_maxp, apt_realp, apt_sex,
      apt_address, apt_img)
    values (#{aptId,jdbcType=VARCHAR},#{aptDescribe,jdbcType=VARCHAR}, #{aptLayer,jdbcType=INTEGER}, #{aptClass,jdbcType=INTEGER},
      #{aptMaxp,jdbcType=INTEGER}, #{aptRealp,jdbcType=INTEGER}, #{aptSex,jdbcType=CHAR},
      #{aptAddress,jdbcType=VARCHAR}, #{aptImg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aijiahao.bean.Apartment">
    <selectKey keyProperty="aptId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into apartment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aptId != null">
        apt_id
      </if>
      <if test="aptDescribe != null">
        apt_describe,
      </if>
      <if test="aptLayer != null">
        apt_layer,
      </if>
      <if test="aptClass != null">
        apt_class,
      </if>
      <if test="aptMaxp != null">
        apt_maxp,
      </if>
      <if test="aptRealp != null">
        apt_realp,
      </if>
      <if test="aptSex != null">
        apt_sex,
      </if>
      <if test="aptAddress != null">
        apt_address,
      </if>
      <if test="aptImg != null">
        apt_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aptDescribe != null">
        #{aptDescribe,jdbcType=VARCHAR},
      </if>
      <if test="aptLayer != null">
        #{aptLayer,jdbcType=INTEGER},
      </if>
      <if test="aptClass != null">
        #{aptClass,jdbcType=INTEGER},
      </if>
      <if test="aptMaxp != null">
        #{aptMaxp,jdbcType=INTEGER},
      </if>
      <if test="aptRealp != null">
        #{aptRealp,jdbcType=INTEGER},
      </if>
      <if test="aptSex != null">
        #{aptSex,jdbcType=CHAR},
      </if>
      <if test="aptAddress != null">
        #{aptAddress,jdbcType=VARCHAR},
      </if>
      <if test="aptImg != null">
        #{aptImg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aijiahao.bean.ApartmentExample" resultType="java.lang.Long">
    select count(*) from apartment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update apartment
    <set>
      <if test="record.aptId != null">
        apt_id = #{record.aptId,jdbcType=CHAR},
      </if>
      <if test="record.aptDescribe != null">
        apt_describe = #{record.aptDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.aptLayer != null">
        apt_layer = #{record.aptLayer,jdbcType=INTEGER},
      </if>
      <if test="record.aptClass != null">
        apt_class = #{record.aptClass,jdbcType=INTEGER},
      </if>
      <if test="record.aptMaxp != null">
        apt_maxp = #{record.aptMaxp,jdbcType=INTEGER},
      </if>
      <if test="record.aptRealp != null">
        apt_realp = #{record.aptRealp,jdbcType=INTEGER},
      </if>
      <if test="record.aptSex != null">
        apt_sex = #{record.aptSex,jdbcType=CHAR},
      </if>
      <if test="record.aptAddress != null">
        apt_address = #{record.aptAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.aptImg != null">
        apt_img = #{record.aptImg,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update apartment
    set apt_id = #{record.aptId,jdbcType=CHAR},
      apt_describe = #{record.aptDescribe,jdbcType=VARCHAR},
      apt_layer = #{record.aptLayer,jdbcType=INTEGER},
      apt_class = #{record.aptClass,jdbcType=INTEGER},
      apt_maxp = #{record.aptMaxp,jdbcType=INTEGER},
      apt_realp = #{record.aptRealp,jdbcType=INTEGER},
      apt_sex = #{record.aptSex,jdbcType=CHAR},
      apt_address = #{record.aptAddress,jdbcType=VARCHAR},
      apt_img = #{record.aptImg,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aijiahao.bean.Apartment">
    update apartment
    <set>
      <if test="aptDescribe != null">
        apt_describe = #{aptDescribe,jdbcType=VARCHAR},
      </if>
      <if test="aptLayer != null">
        apt_layer = #{aptLayer,jdbcType=INTEGER},
      </if>
      <if test="aptClass != null">
        apt_class = #{aptClass,jdbcType=INTEGER},
      </if>
      <if test="aptMaxp != null">
        apt_maxp = #{aptMaxp,jdbcType=INTEGER},
      </if>
      <if test="aptRealp != null">
        apt_realp = #{aptRealp,jdbcType=INTEGER},
      </if>
      <if test="aptSex != null">
        apt_sex = #{aptSex,jdbcType=CHAR},
      </if>
      <if test="aptAddress != null">
        apt_address = #{aptAddress,jdbcType=VARCHAR},
      </if>
      <if test="aptImg != null">
        apt_img = #{aptImg,jdbcType=VARCHAR},
      </if>
    </set>
    where apt_id = #{aptId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aijiahao.bean.Apartment">
    update apartment
    set apt_describe = #{aptDescribe,jdbcType=VARCHAR},
      apt_layer = #{aptLayer,jdbcType=INTEGER},
      apt_class = #{aptClass,jdbcType=INTEGER},
      apt_maxp = #{aptMaxp,jdbcType=INTEGER},
      apt_realp = #{aptRealp,jdbcType=INTEGER},
      apt_sex = #{aptSex,jdbcType=CHAR},
      apt_address = #{aptAddress,jdbcType=VARCHAR},
      apt_img = #{aptImg,jdbcType=VARCHAR}
    where apt_id = #{aptId,jdbcType=CHAR}
  </update>
</mapper>
